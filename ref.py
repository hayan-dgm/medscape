import requests
from bs4 import BeautifulSoup
import pandas as pd


loop = True

def iterate(elements):
        # Loop through the elements and extract information
    for medicine in elements:
        try:
            medicine_name = medicine.find('a').text
            medicine_link = medicine.find('a')['href']              
            # Print extracted data for debugging
            print(f"Medicine Name: {medicine_name}")
            print(f"Medicine Link: {medicine_link}")
            print("-" * 30)
            # Append data to lists
            medicine_names.append(medicine_name)
            medicine_links.append(medicine_link)
        except : 
            global loop
            loop = False


# Define the URL
url = 'https://www.pediatriconcall.com/drugs/drugs-a-to-z'

# Send an HTTP GET request to the URL
response = requests.get(url)

# Check if the request was successful
if response.status_code == 200:
    # Parse the HTML content using Beautiful Soup
    soup = BeautifulSoup(response.content, 'html.parser')
    
    medicine_elements = soup.find_all('div',class_='d_p_c_box_1')
    medicine_elements2 = soup.find_all('div',class_='d_p_c_box_2')

    # Create lists to store data
    medicine_names = []
    medicine_links = []
    iterate(medicine_elements)
    iterate(medicine_elements2)
    page = 2
    while True and loop == True and page <=24:
        response2 =requests.post(url ,data={
            '__EVENTTARGET':"ctl00$ContentPlaceHolder1$grdatoz",
            "__EVENTARGUMENT":"Page$"+str(page),
            "__VIEWSTATE":""
        } ) 
        soup = BeautifulSoup(response2.content, 'html.parser')
        pageElements = soup.find_all('div',class_='d_p_c_box_1')
        pageElements2 = soup.find_all('div',class_='d_p_c_box_2')
        print("*" * 30)
        iterate(pageElements)
        iterate(pageElements2)
        if response2.status_code != 200:
            break
        page = page +1
        
    
    # Create a DataFrame using pandas
    data = {'Medicine Name': medicine_names , 'Medicine Link':medicine_links}
    df = pd.DataFrame(data)
    print(df)

    # Save the DataFrame to an Excel file using openpyxl as the engine
    excel_filename = 'potato.xlsx'
    df.to_excel(excel_filename, index=False, engine='openpyxl')

    print(f"Data saved to {excel_filename}")

